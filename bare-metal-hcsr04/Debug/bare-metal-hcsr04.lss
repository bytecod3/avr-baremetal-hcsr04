
bare-metal-hcsr04.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000026  00800200  00000ab0  00000b24  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000ab0  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .comment      0000005c  00000000  00000000  00000b4a  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000ba8  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000070  00000000  00000000  00000be8  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   0000100a  00000000  00000000  00000c58  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000df0  00000000  00000000  00001c62  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000560  00000000  00000000  00002a52  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  000000cc  00000000  00000000  00002fb4  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    0000063c  00000000  00000000  00003080  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    000001df  00000000  00000000  000036bc  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000050  00000000  00000000  0000389b  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	71 c0       	rjmp	.+226    	; 0xe4 <__ctors_end>
   2:	00 00       	nop
   4:	86 c0       	rjmp	.+268    	; 0x112 <__bad_interrupt>
   6:	00 00       	nop
   8:	84 c0       	rjmp	.+264    	; 0x112 <__bad_interrupt>
   a:	00 00       	nop
   c:	82 c0       	rjmp	.+260    	; 0x112 <__bad_interrupt>
   e:	00 00       	nop
  10:	80 c0       	rjmp	.+256    	; 0x112 <__bad_interrupt>
  12:	00 00       	nop
  14:	7e c0       	rjmp	.+252    	; 0x112 <__bad_interrupt>
  16:	00 00       	nop
  18:	7c c0       	rjmp	.+248    	; 0x112 <__bad_interrupt>
  1a:	00 00       	nop
  1c:	7a c0       	rjmp	.+244    	; 0x112 <__bad_interrupt>
  1e:	00 00       	nop
  20:	78 c0       	rjmp	.+240    	; 0x112 <__bad_interrupt>
  22:	00 00       	nop
  24:	76 c0       	rjmp	.+236    	; 0x112 <__bad_interrupt>
  26:	00 00       	nop
  28:	74 c0       	rjmp	.+232    	; 0x112 <__bad_interrupt>
  2a:	00 00       	nop
  2c:	72 c0       	rjmp	.+228    	; 0x112 <__bad_interrupt>
  2e:	00 00       	nop
  30:	70 c0       	rjmp	.+224    	; 0x112 <__bad_interrupt>
  32:	00 00       	nop
  34:	6e c0       	rjmp	.+220    	; 0x112 <__bad_interrupt>
  36:	00 00       	nop
  38:	6c c0       	rjmp	.+216    	; 0x112 <__bad_interrupt>
  3a:	00 00       	nop
  3c:	6a c0       	rjmp	.+212    	; 0x112 <__bad_interrupt>
  3e:	00 00       	nop
  40:	68 c0       	rjmp	.+208    	; 0x112 <__bad_interrupt>
  42:	00 00       	nop
  44:	66 c0       	rjmp	.+204    	; 0x112 <__bad_interrupt>
  46:	00 00       	nop
  48:	64 c0       	rjmp	.+200    	; 0x112 <__bad_interrupt>
  4a:	00 00       	nop
  4c:	62 c0       	rjmp	.+196    	; 0x112 <__bad_interrupt>
  4e:	00 00       	nop
  50:	60 c0       	rjmp	.+192    	; 0x112 <__bad_interrupt>
  52:	00 00       	nop
  54:	5e c0       	rjmp	.+188    	; 0x112 <__bad_interrupt>
  56:	00 00       	nop
  58:	5c c0       	rjmp	.+184    	; 0x112 <__bad_interrupt>
  5a:	00 00       	nop
  5c:	5a c0       	rjmp	.+180    	; 0x112 <__bad_interrupt>
  5e:	00 00       	nop
  60:	58 c0       	rjmp	.+176    	; 0x112 <__bad_interrupt>
  62:	00 00       	nop
  64:	56 c0       	rjmp	.+172    	; 0x112 <__bad_interrupt>
  66:	00 00       	nop
  68:	54 c0       	rjmp	.+168    	; 0x112 <__bad_interrupt>
  6a:	00 00       	nop
  6c:	52 c0       	rjmp	.+164    	; 0x112 <__bad_interrupt>
  6e:	00 00       	nop
  70:	50 c0       	rjmp	.+160    	; 0x112 <__bad_interrupt>
  72:	00 00       	nop
  74:	4e c0       	rjmp	.+156    	; 0x112 <__bad_interrupt>
  76:	00 00       	nop
  78:	4c c0       	rjmp	.+152    	; 0x112 <__bad_interrupt>
  7a:	00 00       	nop
  7c:	4a c0       	rjmp	.+148    	; 0x112 <__bad_interrupt>
  7e:	00 00       	nop
  80:	48 c0       	rjmp	.+144    	; 0x112 <__bad_interrupt>
  82:	00 00       	nop
  84:	46 c0       	rjmp	.+140    	; 0x112 <__bad_interrupt>
  86:	00 00       	nop
  88:	44 c0       	rjmp	.+136    	; 0x112 <__bad_interrupt>
  8a:	00 00       	nop
  8c:	42 c0       	rjmp	.+132    	; 0x112 <__bad_interrupt>
  8e:	00 00       	nop
  90:	40 c0       	rjmp	.+128    	; 0x112 <__bad_interrupt>
  92:	00 00       	nop
  94:	3e c0       	rjmp	.+124    	; 0x112 <__bad_interrupt>
  96:	00 00       	nop
  98:	3c c0       	rjmp	.+120    	; 0x112 <__bad_interrupt>
  9a:	00 00       	nop
  9c:	3a c0       	rjmp	.+116    	; 0x112 <__bad_interrupt>
  9e:	00 00       	nop
  a0:	38 c0       	rjmp	.+112    	; 0x112 <__bad_interrupt>
  a2:	00 00       	nop
  a4:	36 c0       	rjmp	.+108    	; 0x112 <__bad_interrupt>
  a6:	00 00       	nop
  a8:	34 c0       	rjmp	.+104    	; 0x112 <__bad_interrupt>
  aa:	00 00       	nop
  ac:	32 c0       	rjmp	.+100    	; 0x112 <__bad_interrupt>
  ae:	00 00       	nop
  b0:	30 c0       	rjmp	.+96     	; 0x112 <__bad_interrupt>
  b2:	00 00       	nop
  b4:	2e c0       	rjmp	.+92     	; 0x112 <__bad_interrupt>
  b6:	00 00       	nop
  b8:	2c c0       	rjmp	.+88     	; 0x112 <__bad_interrupt>
  ba:	00 00       	nop
  bc:	2a c0       	rjmp	.+84     	; 0x112 <__bad_interrupt>
  be:	00 00       	nop
  c0:	28 c0       	rjmp	.+80     	; 0x112 <__bad_interrupt>
  c2:	00 00       	nop
  c4:	26 c0       	rjmp	.+76     	; 0x112 <__bad_interrupt>
  c6:	00 00       	nop
  c8:	24 c0       	rjmp	.+72     	; 0x112 <__bad_interrupt>
  ca:	00 00       	nop
  cc:	22 c0       	rjmp	.+68     	; 0x112 <__bad_interrupt>
  ce:	00 00       	nop
  d0:	20 c0       	rjmp	.+64     	; 0x112 <__bad_interrupt>
  d2:	00 00       	nop
  d4:	1e c0       	rjmp	.+60     	; 0x112 <__bad_interrupt>
  d6:	00 00       	nop
  d8:	1c c0       	rjmp	.+56     	; 0x112 <__bad_interrupt>
  da:	00 00       	nop
  dc:	1a c0       	rjmp	.+52     	; 0x112 <__bad_interrupt>
  de:	00 00       	nop
  e0:	18 c0       	rjmp	.+48     	; 0x112 <__bad_interrupt>
	...

000000e4 <__ctors_end>:
  e4:	11 24       	eor	r1, r1
  e6:	1f be       	out	0x3f, r1	; 63
  e8:	cf ef       	ldi	r28, 0xFF	; 255
  ea:	d1 e2       	ldi	r29, 0x21	; 33
  ec:	de bf       	out	0x3e, r29	; 62
  ee:	cd bf       	out	0x3d, r28	; 61
  f0:	00 e0       	ldi	r16, 0x00	; 0
  f2:	0c bf       	out	0x3c, r16	; 60

000000f4 <__do_copy_data>:
  f4:	12 e0       	ldi	r17, 0x02	; 2
  f6:	a0 e0       	ldi	r26, 0x00	; 0
  f8:	b2 e0       	ldi	r27, 0x02	; 2
  fa:	e0 eb       	ldi	r30, 0xB0	; 176
  fc:	fa e0       	ldi	r31, 0x0A	; 10
  fe:	00 e0       	ldi	r16, 0x00	; 0
 100:	0b bf       	out	0x3b, r16	; 59
 102:	02 c0       	rjmp	.+4      	; 0x108 <__do_copy_data+0x14>
 104:	07 90       	elpm	r0, Z+
 106:	0d 92       	st	X+, r0
 108:	a6 32       	cpi	r26, 0x26	; 38
 10a:	b1 07       	cpc	r27, r17
 10c:	d9 f7       	brne	.-10     	; 0x104 <__do_copy_data+0x10>
 10e:	54 d0       	rcall	.+168    	; 0x1b8 <main>
 110:	cd c4       	rjmp	.+2458   	; 0xaac <_exit>

00000112 <__bad_interrupt>:
 112:	76 cf       	rjmp	.-276    	; 0x0 <__vectors>

00000114 <hcsro4_init>:
#define HCSR04_TRIGGER_PIN	PK6
#define HCSR04_ECHO_PIN		PK7
#define TRIG_PULSE_LENGTH	10 // trigger length in us

void hcsro4_init() {
	DDRK |= (1<<PK0); // trigger pin output 
 114:	e7 e0       	ldi	r30, 0x07	; 7
 116:	f1 e0       	ldi	r31, 0x01	; 1
 118:	80 81       	ld	r24, Z
 11a:	81 60       	ori	r24, 0x01	; 1
 11c:	80 83       	st	Z, r24
 11e:	08 95       	ret

00000120 <hcsro4_trigger>:
}

void hcsro4_trigger() {
	HCSR04_DDR |= (1<<HCSR04_TRIGGER_PIN); 
 120:	e7 e0       	ldi	r30, 0x07	; 7
 122:	f1 e0       	ldi	r31, 0x01	; 1
 124:	80 81       	ld	r24, Z
 126:	80 64       	ori	r24, 0x40	; 64
 128:	80 83       	st	Z, r24
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 12a:	85 e3       	ldi	r24, 0x35	; 53
 12c:	8a 95       	dec	r24
 12e:	f1 f7       	brne	.-4      	; 0x12c <hcsro4_trigger+0xc>
 130:	00 00       	nop
	_delay_us(TRIG_PULSE_LENGTH);
	HCSR04_DDR &= ~(1<<HCSR04_TRIGGER_PIN);
 132:	80 81       	ld	r24, Z
 134:	8f 7b       	andi	r24, 0xBF	; 191
 136:	80 83       	st	Z, r24
 138:	08 95       	ret

0000013a <hcsro4_get_pulse_width>:
	// measure pulse duration received from the echo pin
	uint32_t i, result;
	uint16_t ticks;
	
	// set timer 1 to measure 38ms timeout 
	TCCR1A |= (1<<WGM12);	// start timer in CTC mode
 13a:	e0 e8       	ldi	r30, 0x80	; 128
 13c:	f0 e0       	ldi	r31, 0x00	; 0
 13e:	80 81       	ld	r24, Z
 140:	88 60       	ori	r24, 0x08	; 8
 142:	80 83       	st	Z, r24
	TCCR1B |= (1<<CS12);	// pre-scale to 256
 144:	e1 e8       	ldi	r30, 0x81	; 129
 146:	f0 e0       	ldi	r31, 0x00	; 0
 148:	80 81       	ld	r24, Z
 14a:	84 60       	ori	r24, 0x04	; 4
 14c:	80 83       	st	Z, r24
	OCR1A = 2374;			// count 38ms
 14e:	86 e4       	ldi	r24, 0x46	; 70
 150:	99 e0       	ldi	r25, 0x09	; 9
 152:	90 93 89 00 	sts	0x0089, r25	; 0x800089 <__TEXT_REGION_LENGTH__+0x7c0089>
 156:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <__TEXT_REGION_LENGTH__+0x7c0088>
	
	// check for high pulse on the echo pin after trigger pulse is released
	// will wait for 38 ms, if 38ms pass, echo pin is faulty 
	while(!(TIFR1 & (1<<OCF1A))) {
 15a:	08 c0       	rjmp	.+16     	; 0x16c <hcsro4_get_pulse_width+0x32>
		if(!(HCSR04_PIN & (1<<HCSR04_ECHO_PIN))) {
 15c:	80 91 06 01 	lds	r24, 0x0106	; 0x800106 <__TEXT_REGION_LENGTH__+0x7c0106>
 160:	88 23       	and	r24, r24
 162:	24 f4       	brge	.+8      	; 0x16c <hcsro4_get_pulse_width+0x32>
			continue; // ECHO pin is LOW continue
		} else {
			TIFR1 &= ~(1<<OCF1A); 
 164:	86 b3       	in	r24, 0x16	; 22
 166:	8d 7f       	andi	r24, 0xFD	; 253
 168:	86 bb       	out	0x16, r24	; 22
			break; // HIGH on ECHO pin detected, break loop
 16a:	02 c0       	rjmp	.+4      	; 0x170 <hcsro4_get_pulse_width+0x36>
	TCCR1B |= (1<<CS12);	// pre-scale to 256
	OCR1A = 2374;			// count 38ms
	
	// check for high pulse on the echo pin after trigger pulse is released
	// will wait for 38 ms, if 38ms pass, echo pin is faulty 
	while(!(TIFR1 & (1<<OCF1A))) {
 16c:	b1 9b       	sbis	0x16, 1	; 22
 16e:	f6 cf       	rjmp	.-20     	; 0x15c <hcsro4_get_pulse_width+0x22>
			break; // HIGH on ECHO pin detected, break loop
		}
	}
	
	// check if OCF bit was cleared successfully
	if(TIFR1 & (1<<OCF1A))	 {
 170:	b1 99       	sbic	0x16, 1	; 22
 172:	18 c0       	rjmp	.+48     	; 0x1a4 <hcsro4_get_pulse_width+0x6a>
 174:	10 c0       	rjmp	.+32     	; 0x196 <hcsro4_get_pulse_width+0x5c>
		return -1; // failed to activate echo pin
	} 	
	
	// wait for FALLING EDGE on the ECHO pin - polling 
	while(!(TIFR1 & (1<<OCF1A))) {
		if(!(HCSR04_PIN & (1<<HCSR04_ECHO_PIN))) { // falling edge detected
 176:	80 91 06 01 	lds	r24, 0x0106	; 0x800106 <__TEXT_REGION_LENGTH__+0x7c0106>
 17a:	88 23       	and	r24, r24
 17c:	64 f0       	brlt	.+24     	; 0x196 <hcsro4_get_pulse_width+0x5c>
			ticks = TCNT1;
 17e:	e4 e8       	ldi	r30, 0x84	; 132
 180:	f0 e0       	ldi	r31, 0x00	; 0
 182:	20 81       	ld	r18, Z
 184:	31 81       	ldd	r19, Z+1	; 0x01
			TCNT1 = 0x00;
 186:	11 82       	std	Z+1, r1	; 0x01
 188:	10 82       	st	Z, r1
			TCCR1A = 0x00; // stop timer 
 18a:	10 92 80 00 	sts	0x0080, r1	; 0x800080 <__TEXT_REGION_LENGTH__+0x7c0080>
			TIFR1 &= ~(1<<OCF1A);
 18e:	86 b3       	in	r24, 0x16	; 22
 190:	8d 7f       	andi	r24, 0xFD	; 253
 192:	86 bb       	out	0x16, r24	; 22
			break;
 194:	02 c0       	rjmp	.+4      	; 0x19a <hcsro4_get_pulse_width+0x60>
	if(TIFR1 & (1<<OCF1A))	 {
		return -1; // failed to activate echo pin
	} 	
	
	// wait for FALLING EDGE on the ECHO pin - polling 
	while(!(TIFR1 & (1<<OCF1A))) {
 196:	b1 9b       	sbis	0x16, 1	; 22
 198:	ee cf       	rjmp	.-36     	; 0x176 <hcsro4_get_pulse_width+0x3c>
		}
	}
	
	// check if the OCF1A flag is still 0, meaning timeout on the ECHO pin
	// if 38ms pass without detecting a LOW on the ECHO pin, then there is no obstacle on that side
	if(TIFR1 & (1<<OCF1A))	 {
 19a:	b1 9b       	sbis	0x16, 1	; 22
 19c:	06 c0       	rjmp	.+12     	; 0x1aa <hcsro4_get_pulse_width+0x70>
		return -2; // no obstacle in range
 19e:	8e ef       	ldi	r24, 0xFE	; 254
 1a0:	9f ef       	ldi	r25, 0xFF	; 255
 1a2:	08 95       	ret
		}
	}
	
	// check if OCF bit was cleared successfully
	if(TIFR1 & (1<<OCF1A))	 {
		return -1; // failed to activate echo pin
 1a4:	8f ef       	ldi	r24, 0xFF	; 255
 1a6:	9f ef       	ldi	r25, 0xFF	; 255
 1a8:	08 95       	ret
	// if 38ms pass without detecting a LOW on the ECHO pin, then there is no obstacle on that side
	if(TIFR1 & (1<<OCF1A))	 {
		return -2; // no obstacle in range
	} 
	
	return ticks;
 1aa:	82 2f       	mov	r24, r18
 1ac:	93 2f       	mov	r25, r19
	
}
 1ae:	08 95       	ret

000001b0 <onboard_led_init>:


void onboard_led_init() {
	DDRB |= (1<<PB7);
 1b0:	84 b1       	in	r24, 0x04	; 4
 1b2:	80 68       	ori	r24, 0x80	; 128
 1b4:	84 b9       	out	0x04, r24	; 4
 1b6:	08 95       	ret

000001b8 <main>:
}

int main(void)
{
 1b8:	cf 93       	push	r28
 1ba:	df 93       	push	r29
 1bc:	cd b7       	in	r28, 0x3d	; 61
 1be:	de b7       	in	r29, 0x3e	; 62
 1c0:	64 97       	sbiw	r28, 0x14	; 20
 1c2:	0f b6       	in	r0, 0x3f	; 63
 1c4:	f8 94       	cli
 1c6:	de bf       	out	0x3e, r29	; 62
 1c8:	0f be       	out	0x3f, r0	; 63
 1ca:	cd bf       	out	0x3d, r28	; 61
	hcsro4_init();
 1cc:	a3 df       	rcall	.-186    	; 0x114 <hcsro4_init>
    usart_init();
 1ce:	41 d0       	rcall	.+130    	; 0x252 <usart_init>
	onboard_led_init();
 1d0:	ef df       	rcall	.-34     	; 0x1b0 <onboard_led_init>
	char d_buff[20];
	uint16_t r = 0;
	
    while (1) 
    {
		hcsro4_trigger();
 1d2:	a6 df       	rcall	.-180    	; 0x120 <hcsro4_trigger>
 1d4:	b2 df       	rcall	.-156    	; 0x13a <hcsro4_get_pulse_width>
		r = hcsro4_get_pulse_width();
 1d6:	8f 3f       	cpi	r24, 0xFF	; 255
 1d8:	2f ef       	ldi	r18, 0xFF	; 255
		
		if(r == -1) {
 1da:	92 07       	cpc	r25, r18
 1dc:	21 f4       	brne	.+8      	; 0x1e6 <main+0x2e>
 1de:	80 e0       	ldi	r24, 0x00	; 0
			debug_via_usart("Sensor error");
 1e0:	92 e0       	ldi	r25, 0x02	; 2
 1e2:	4f d0       	rcall	.+158    	; 0x282 <debug_via_usart>
 1e4:	f6 cf       	rjmp	.-20     	; 0x1d2 <main+0x1a>
 1e6:	8e 3f       	cpi	r24, 0xFE	; 254
 1e8:	2f ef       	ldi	r18, 0xFF	; 255
		} else if(r == -2) {
 1ea:	92 07       	cpc	r25, r18
 1ec:	21 f4       	brne	.+8      	; 0x1f6 <main+0x3e>
 1ee:	8d e0       	ldi	r24, 0x0D	; 13
			debug_via_usart("No obstacle in range");
 1f0:	92 e0       	ldi	r25, 0x02	; 2
 1f2:	47 d0       	rcall	.+142    	; 0x282 <debug_via_usart>
 1f4:	ee cf       	rjmp	.-36     	; 0x1d2 <main+0x1a>
 1f6:	bc 01       	movw	r22, r24
		} else {
			// calculate the distance 
			uint16_t pulse_width = r * (16E-6);
 1f8:	80 e0       	ldi	r24, 0x00	; 0
 1fa:	90 e0       	ldi	r25, 0x00	; 0
 1fc:	8b d0       	rcall	.+278    	; 0x314 <__floatunsisf>
 1fe:	2d eb       	ldi	r18, 0xBD	; 189
 200:	37 e3       	ldi	r19, 0x37	; 55
 202:	46 e8       	ldi	r20, 0x86	; 134
 204:	57 e3       	ldi	r21, 0x37	; 55
 206:	ec d0       	rcall	.+472    	; 0x3e0 <__mulsf3>
 208:	59 d0       	rcall	.+178    	; 0x2bc <__fixunssfsi>
 20a:	24 e5       	ldi	r18, 0x54	; 84
 20c:	31 e0       	ldi	r19, 0x01	; 1
			uint16_t distance = pulse_width * 340; // distance in meters
 20e:	26 9f       	mul	r18, r22
 210:	a0 01       	movw	r20, r0
 212:	27 9f       	mul	r18, r23
 214:	50 0d       	add	r21, r0
 216:	36 9f       	mul	r19, r22
 218:	50 0d       	add	r21, r0
 21a:	11 24       	eor	r1, r1
 21c:	5f 93       	push	r21
 21e:	4f 93       	push	r20
			sprintf(d_buff, "%d\n", distance);
 220:	82 e2       	ldi	r24, 0x22	; 34
 222:	92 e0       	ldi	r25, 0x02	; 2
 224:	9f 93       	push	r25
 226:	8f 93       	push	r24
 228:	8e 01       	movw	r16, r28
 22a:	0f 5f       	subi	r16, 0xFF	; 255
 22c:	1f 4f       	sbci	r17, 0xFF	; 255
 22e:	1f 93       	push	r17
 230:	0f 93       	push	r16
 232:	61 d1       	rcall	.+706    	; 0x4f6 <sprintf>
 234:	c8 01       	movw	r24, r16
			debug_via_usart(d_buff);
 236:	25 d0       	rcall	.+74     	; 0x282 <debug_via_usart>
 238:	8f e3       	ldi	r24, 0x3F	; 63
 23a:	9c e9       	ldi	r25, 0x9C	; 156
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 23c:	01 97       	sbiw	r24, 0x01	; 1
 23e:	f1 f7       	brne	.-4      	; 0x23c <main+0x84>
 240:	00 c0       	rjmp	.+0      	; 0x242 <main+0x8a>
 242:	00 00       	nop
 244:	0f 90       	pop	r0
 246:	0f 90       	pop	r0
 248:	0f 90       	pop	r0
 24a:	0f 90       	pop	r0
 24c:	0f 90       	pop	r0
 24e:	0f 90       	pop	r0
 250:	c0 cf       	rjmp	.-128    	; 0x1d2 <main+0x1a>

00000252 <usart_init>:

void usart_init()
{
	// set 9600 baud rate
	uint32_t ubrr = (F_CPU/16UL)/BAUD - 1;
	UBRR0H = (unsigned char) (ubrr>>8);
 252:	10 92 c5 00 	sts	0x00C5, r1	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7c00c5>
	UBRR0L = ubrr;
 256:	87 e6       	ldi	r24, 0x67	; 103
 258:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7c00c4>
	
	// enable transmitter and receiver
	UCSR0B |= (1<<RXEN0);
 25c:	e1 ec       	ldi	r30, 0xC1	; 193
 25e:	f0 e0       	ldi	r31, 0x00	; 0
 260:	80 81       	ld	r24, Z
 262:	80 61       	ori	r24, 0x10	; 16
 264:	80 83       	st	Z, r24
	UCSR0B |= (1<<TXEN0);
 266:	80 81       	ld	r24, Z
 268:	88 60       	ori	r24, 0x08	; 8
 26a:	80 83       	st	Z, r24
	
	// set the frame format 8-bit, 2-stop bit
	UCSR0C = (1<<USBS0) | (3 << UCSZ00);
 26c:	8e e0       	ldi	r24, 0x0E	; 14
 26e:	80 93 c2 00 	sts	0x00C2, r24	; 0x8000c2 <__TEXT_REGION_LENGTH__+0x7c00c2>
 272:	08 95       	ret

00000274 <usart_transmit>:
}

void usart_transmit(unsigned char c)
{
	// wait for empty transmit buffer
	while ( !(UCSR0A & (1 <<UDRE0)));
 274:	90 91 c0 00 	lds	r25, 0x00C0	; 0x8000c0 <__TEXT_REGION_LENGTH__+0x7c00c0>
 278:	95 ff       	sbrs	r25, 5
 27a:	fc cf       	rjmp	.-8      	; 0x274 <usart_transmit>
	
	// put data into buffer
	UDR0 = c;
 27c:	80 93 c6 00 	sts	0x00C6, r24	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7c00c6>
 280:	08 95       	ret

00000282 <debug_via_usart>:
}

void debug_via_usart(char* s)
{
 282:	0f 93       	push	r16
 284:	1f 93       	push	r17
 286:	cf 93       	push	r28
 288:	df 93       	push	r29
 28a:	8c 01       	movw	r16, r24
	for(int j =0; j<strlen(s); j++)
 28c:	c0 e0       	ldi	r28, 0x00	; 0
 28e:	d0 e0       	ldi	r29, 0x00	; 0
 290:	06 c0       	rjmp	.+12     	; 0x29e <debug_via_usart+0x1c>
	{
		usart_transmit(s[j]);
 292:	f8 01       	movw	r30, r16
 294:	ec 0f       	add	r30, r28
 296:	fd 1f       	adc	r31, r29
 298:	80 81       	ld	r24, Z
 29a:	ec df       	rcall	.-40     	; 0x274 <usart_transmit>
	UDR0 = c;
}

void debug_via_usart(char* s)
{
	for(int j =0; j<strlen(s); j++)
 29c:	21 96       	adiw	r28, 0x01	; 1
 29e:	f8 01       	movw	r30, r16
 2a0:	01 90       	ld	r0, Z+
 2a2:	00 20       	and	r0, r0
 2a4:	e9 f7       	brne	.-6      	; 0x2a0 <debug_via_usart+0x1e>
 2a6:	31 97       	sbiw	r30, 0x01	; 1
 2a8:	e0 1b       	sub	r30, r16
 2aa:	f1 0b       	sbc	r31, r17
 2ac:	ce 17       	cp	r28, r30
 2ae:	df 07       	cpc	r29, r31
 2b0:	80 f3       	brcs	.-32     	; 0x292 <debug_via_usart+0x10>
	{
		usart_transmit(s[j]);
	}
	
 2b2:	df 91       	pop	r29
 2b4:	cf 91       	pop	r28
 2b6:	1f 91       	pop	r17
 2b8:	0f 91       	pop	r16
 2ba:	08 95       	ret

000002bc <__fixunssfsi>:
 2bc:	70 d0       	rcall	.+224    	; 0x39e <__fp_splitA>
 2be:	88 f0       	brcs	.+34     	; 0x2e2 <__fixunssfsi+0x26>
 2c0:	9f 57       	subi	r25, 0x7F	; 127
 2c2:	90 f0       	brcs	.+36     	; 0x2e8 <__fixunssfsi+0x2c>
 2c4:	b9 2f       	mov	r27, r25
 2c6:	99 27       	eor	r25, r25
 2c8:	b7 51       	subi	r27, 0x17	; 23
 2ca:	a0 f0       	brcs	.+40     	; 0x2f4 <__fixunssfsi+0x38>
 2cc:	d1 f0       	breq	.+52     	; 0x302 <__fixunssfsi+0x46>
 2ce:	66 0f       	add	r22, r22
 2d0:	77 1f       	adc	r23, r23
 2d2:	88 1f       	adc	r24, r24
 2d4:	99 1f       	adc	r25, r25
 2d6:	1a f0       	brmi	.+6      	; 0x2de <__fixunssfsi+0x22>
 2d8:	ba 95       	dec	r27
 2da:	c9 f7       	brne	.-14     	; 0x2ce <__fixunssfsi+0x12>
 2dc:	12 c0       	rjmp	.+36     	; 0x302 <__fixunssfsi+0x46>
 2de:	b1 30       	cpi	r27, 0x01	; 1
 2e0:	81 f0       	breq	.+32     	; 0x302 <__fixunssfsi+0x46>
 2e2:	77 d0       	rcall	.+238    	; 0x3d2 <__fp_zero>
 2e4:	b1 e0       	ldi	r27, 0x01	; 1
 2e6:	08 95       	ret
 2e8:	74 c0       	rjmp	.+232    	; 0x3d2 <__fp_zero>
 2ea:	67 2f       	mov	r22, r23
 2ec:	78 2f       	mov	r23, r24
 2ee:	88 27       	eor	r24, r24
 2f0:	b8 5f       	subi	r27, 0xF8	; 248
 2f2:	39 f0       	breq	.+14     	; 0x302 <__fixunssfsi+0x46>
 2f4:	b9 3f       	cpi	r27, 0xF9	; 249
 2f6:	cc f3       	brlt	.-14     	; 0x2ea <__fixunssfsi+0x2e>
 2f8:	86 95       	lsr	r24
 2fa:	77 95       	ror	r23
 2fc:	67 95       	ror	r22
 2fe:	b3 95       	inc	r27
 300:	d9 f7       	brne	.-10     	; 0x2f8 <__fixunssfsi+0x3c>
 302:	3e f4       	brtc	.+14     	; 0x312 <__fixunssfsi+0x56>
 304:	90 95       	com	r25
 306:	80 95       	com	r24
 308:	70 95       	com	r23
 30a:	61 95       	neg	r22
 30c:	7f 4f       	sbci	r23, 0xFF	; 255
 30e:	8f 4f       	sbci	r24, 0xFF	; 255
 310:	9f 4f       	sbci	r25, 0xFF	; 255
 312:	08 95       	ret

00000314 <__floatunsisf>:
 314:	e8 94       	clt
 316:	09 c0       	rjmp	.+18     	; 0x32a <__floatsisf+0x12>

00000318 <__floatsisf>:
 318:	97 fb       	bst	r25, 7
 31a:	3e f4       	brtc	.+14     	; 0x32a <__floatsisf+0x12>
 31c:	90 95       	com	r25
 31e:	80 95       	com	r24
 320:	70 95       	com	r23
 322:	61 95       	neg	r22
 324:	7f 4f       	sbci	r23, 0xFF	; 255
 326:	8f 4f       	sbci	r24, 0xFF	; 255
 328:	9f 4f       	sbci	r25, 0xFF	; 255
 32a:	99 23       	and	r25, r25
 32c:	a9 f0       	breq	.+42     	; 0x358 <__floatsisf+0x40>
 32e:	f9 2f       	mov	r31, r25
 330:	96 e9       	ldi	r25, 0x96	; 150
 332:	bb 27       	eor	r27, r27
 334:	93 95       	inc	r25
 336:	f6 95       	lsr	r31
 338:	87 95       	ror	r24
 33a:	77 95       	ror	r23
 33c:	67 95       	ror	r22
 33e:	b7 95       	ror	r27
 340:	f1 11       	cpse	r31, r1
 342:	f8 cf       	rjmp	.-16     	; 0x334 <__floatsisf+0x1c>
 344:	fa f4       	brpl	.+62     	; 0x384 <__floatsisf+0x6c>
 346:	bb 0f       	add	r27, r27
 348:	11 f4       	brne	.+4      	; 0x34e <__floatsisf+0x36>
 34a:	60 ff       	sbrs	r22, 0
 34c:	1b c0       	rjmp	.+54     	; 0x384 <__floatsisf+0x6c>
 34e:	6f 5f       	subi	r22, 0xFF	; 255
 350:	7f 4f       	sbci	r23, 0xFF	; 255
 352:	8f 4f       	sbci	r24, 0xFF	; 255
 354:	9f 4f       	sbci	r25, 0xFF	; 255
 356:	16 c0       	rjmp	.+44     	; 0x384 <__floatsisf+0x6c>
 358:	88 23       	and	r24, r24
 35a:	11 f0       	breq	.+4      	; 0x360 <__floatsisf+0x48>
 35c:	96 e9       	ldi	r25, 0x96	; 150
 35e:	11 c0       	rjmp	.+34     	; 0x382 <__floatsisf+0x6a>
 360:	77 23       	and	r23, r23
 362:	21 f0       	breq	.+8      	; 0x36c <__floatsisf+0x54>
 364:	9e e8       	ldi	r25, 0x8E	; 142
 366:	87 2f       	mov	r24, r23
 368:	76 2f       	mov	r23, r22
 36a:	05 c0       	rjmp	.+10     	; 0x376 <__floatsisf+0x5e>
 36c:	66 23       	and	r22, r22
 36e:	71 f0       	breq	.+28     	; 0x38c <__floatsisf+0x74>
 370:	96 e8       	ldi	r25, 0x86	; 134
 372:	86 2f       	mov	r24, r22
 374:	70 e0       	ldi	r23, 0x00	; 0
 376:	60 e0       	ldi	r22, 0x00	; 0
 378:	2a f0       	brmi	.+10     	; 0x384 <__floatsisf+0x6c>
 37a:	9a 95       	dec	r25
 37c:	66 0f       	add	r22, r22
 37e:	77 1f       	adc	r23, r23
 380:	88 1f       	adc	r24, r24
 382:	da f7       	brpl	.-10     	; 0x37a <__floatsisf+0x62>
 384:	88 0f       	add	r24, r24
 386:	96 95       	lsr	r25
 388:	87 95       	ror	r24
 38a:	97 f9       	bld	r25, 7
 38c:	08 95       	ret

0000038e <__fp_split3>:
 38e:	57 fd       	sbrc	r21, 7
 390:	90 58       	subi	r25, 0x80	; 128
 392:	44 0f       	add	r20, r20
 394:	55 1f       	adc	r21, r21
 396:	59 f0       	breq	.+22     	; 0x3ae <__fp_splitA+0x10>
 398:	5f 3f       	cpi	r21, 0xFF	; 255
 39a:	71 f0       	breq	.+28     	; 0x3b8 <__fp_splitA+0x1a>
 39c:	47 95       	ror	r20

0000039e <__fp_splitA>:
 39e:	88 0f       	add	r24, r24
 3a0:	97 fb       	bst	r25, 7
 3a2:	99 1f       	adc	r25, r25
 3a4:	61 f0       	breq	.+24     	; 0x3be <__fp_splitA+0x20>
 3a6:	9f 3f       	cpi	r25, 0xFF	; 255
 3a8:	79 f0       	breq	.+30     	; 0x3c8 <__fp_splitA+0x2a>
 3aa:	87 95       	ror	r24
 3ac:	08 95       	ret
 3ae:	12 16       	cp	r1, r18
 3b0:	13 06       	cpc	r1, r19
 3b2:	14 06       	cpc	r1, r20
 3b4:	55 1f       	adc	r21, r21
 3b6:	f2 cf       	rjmp	.-28     	; 0x39c <__fp_split3+0xe>
 3b8:	46 95       	lsr	r20
 3ba:	f1 df       	rcall	.-30     	; 0x39e <__fp_splitA>
 3bc:	08 c0       	rjmp	.+16     	; 0x3ce <__fp_splitA+0x30>
 3be:	16 16       	cp	r1, r22
 3c0:	17 06       	cpc	r1, r23
 3c2:	18 06       	cpc	r1, r24
 3c4:	99 1f       	adc	r25, r25
 3c6:	f1 cf       	rjmp	.-30     	; 0x3aa <__fp_splitA+0xc>
 3c8:	86 95       	lsr	r24
 3ca:	71 05       	cpc	r23, r1
 3cc:	61 05       	cpc	r22, r1
 3ce:	08 94       	sec
 3d0:	08 95       	ret

000003d2 <__fp_zero>:
 3d2:	e8 94       	clt

000003d4 <__fp_szero>:
 3d4:	bb 27       	eor	r27, r27
 3d6:	66 27       	eor	r22, r22
 3d8:	77 27       	eor	r23, r23
 3da:	cb 01       	movw	r24, r22
 3dc:	97 f9       	bld	r25, 7
 3de:	08 95       	ret

000003e0 <__mulsf3>:
 3e0:	0b d0       	rcall	.+22     	; 0x3f8 <__mulsf3x>
 3e2:	78 c0       	rjmp	.+240    	; 0x4d4 <__fp_round>
 3e4:	69 d0       	rcall	.+210    	; 0x4b8 <__fp_pscA>
 3e6:	28 f0       	brcs	.+10     	; 0x3f2 <__mulsf3+0x12>
 3e8:	6e d0       	rcall	.+220    	; 0x4c6 <__fp_pscB>
 3ea:	18 f0       	brcs	.+6      	; 0x3f2 <__mulsf3+0x12>
 3ec:	95 23       	and	r25, r21
 3ee:	09 f0       	breq	.+2      	; 0x3f2 <__mulsf3+0x12>
 3f0:	5a c0       	rjmp	.+180    	; 0x4a6 <__fp_inf>
 3f2:	5f c0       	rjmp	.+190    	; 0x4b2 <__fp_nan>
 3f4:	11 24       	eor	r1, r1
 3f6:	ee cf       	rjmp	.-36     	; 0x3d4 <__fp_szero>

000003f8 <__mulsf3x>:
 3f8:	ca df       	rcall	.-108    	; 0x38e <__fp_split3>
 3fa:	a0 f3       	brcs	.-24     	; 0x3e4 <__mulsf3+0x4>

000003fc <__mulsf3_pse>:
 3fc:	95 9f       	mul	r25, r21
 3fe:	d1 f3       	breq	.-12     	; 0x3f4 <__mulsf3+0x14>
 400:	95 0f       	add	r25, r21
 402:	50 e0       	ldi	r21, 0x00	; 0
 404:	55 1f       	adc	r21, r21
 406:	62 9f       	mul	r22, r18
 408:	f0 01       	movw	r30, r0
 40a:	72 9f       	mul	r23, r18
 40c:	bb 27       	eor	r27, r27
 40e:	f0 0d       	add	r31, r0
 410:	b1 1d       	adc	r27, r1
 412:	63 9f       	mul	r22, r19
 414:	aa 27       	eor	r26, r26
 416:	f0 0d       	add	r31, r0
 418:	b1 1d       	adc	r27, r1
 41a:	aa 1f       	adc	r26, r26
 41c:	64 9f       	mul	r22, r20
 41e:	66 27       	eor	r22, r22
 420:	b0 0d       	add	r27, r0
 422:	a1 1d       	adc	r26, r1
 424:	66 1f       	adc	r22, r22
 426:	82 9f       	mul	r24, r18
 428:	22 27       	eor	r18, r18
 42a:	b0 0d       	add	r27, r0
 42c:	a1 1d       	adc	r26, r1
 42e:	62 1f       	adc	r22, r18
 430:	73 9f       	mul	r23, r19
 432:	b0 0d       	add	r27, r0
 434:	a1 1d       	adc	r26, r1
 436:	62 1f       	adc	r22, r18
 438:	83 9f       	mul	r24, r19
 43a:	a0 0d       	add	r26, r0
 43c:	61 1d       	adc	r22, r1
 43e:	22 1f       	adc	r18, r18
 440:	74 9f       	mul	r23, r20
 442:	33 27       	eor	r19, r19
 444:	a0 0d       	add	r26, r0
 446:	61 1d       	adc	r22, r1
 448:	23 1f       	adc	r18, r19
 44a:	84 9f       	mul	r24, r20
 44c:	60 0d       	add	r22, r0
 44e:	21 1d       	adc	r18, r1
 450:	82 2f       	mov	r24, r18
 452:	76 2f       	mov	r23, r22
 454:	6a 2f       	mov	r22, r26
 456:	11 24       	eor	r1, r1
 458:	9f 57       	subi	r25, 0x7F	; 127
 45a:	50 40       	sbci	r21, 0x00	; 0
 45c:	8a f0       	brmi	.+34     	; 0x480 <__LOCK_REGION_LENGTH__+0x80>
 45e:	e1 f0       	breq	.+56     	; 0x498 <__LOCK_REGION_LENGTH__+0x98>
 460:	88 23       	and	r24, r24
 462:	4a f0       	brmi	.+18     	; 0x476 <__LOCK_REGION_LENGTH__+0x76>
 464:	ee 0f       	add	r30, r30
 466:	ff 1f       	adc	r31, r31
 468:	bb 1f       	adc	r27, r27
 46a:	66 1f       	adc	r22, r22
 46c:	77 1f       	adc	r23, r23
 46e:	88 1f       	adc	r24, r24
 470:	91 50       	subi	r25, 0x01	; 1
 472:	50 40       	sbci	r21, 0x00	; 0
 474:	a9 f7       	brne	.-22     	; 0x460 <__LOCK_REGION_LENGTH__+0x60>
 476:	9e 3f       	cpi	r25, 0xFE	; 254
 478:	51 05       	cpc	r21, r1
 47a:	70 f0       	brcs	.+28     	; 0x498 <__LOCK_REGION_LENGTH__+0x98>
 47c:	14 c0       	rjmp	.+40     	; 0x4a6 <__fp_inf>
 47e:	aa cf       	rjmp	.-172    	; 0x3d4 <__fp_szero>
 480:	5f 3f       	cpi	r21, 0xFF	; 255
 482:	ec f3       	brlt	.-6      	; 0x47e <__LOCK_REGION_LENGTH__+0x7e>
 484:	98 3e       	cpi	r25, 0xE8	; 232
 486:	dc f3       	brlt	.-10     	; 0x47e <__LOCK_REGION_LENGTH__+0x7e>
 488:	86 95       	lsr	r24
 48a:	77 95       	ror	r23
 48c:	67 95       	ror	r22
 48e:	b7 95       	ror	r27
 490:	f7 95       	ror	r31
 492:	e7 95       	ror	r30
 494:	9f 5f       	subi	r25, 0xFF	; 255
 496:	c1 f7       	brne	.-16     	; 0x488 <__LOCK_REGION_LENGTH__+0x88>
 498:	fe 2b       	or	r31, r30
 49a:	88 0f       	add	r24, r24
 49c:	91 1d       	adc	r25, r1
 49e:	96 95       	lsr	r25
 4a0:	87 95       	ror	r24
 4a2:	97 f9       	bld	r25, 7
 4a4:	08 95       	ret

000004a6 <__fp_inf>:
 4a6:	97 f9       	bld	r25, 7
 4a8:	9f 67       	ori	r25, 0x7F	; 127
 4aa:	80 e8       	ldi	r24, 0x80	; 128
 4ac:	70 e0       	ldi	r23, 0x00	; 0
 4ae:	60 e0       	ldi	r22, 0x00	; 0
 4b0:	08 95       	ret

000004b2 <__fp_nan>:
 4b2:	9f ef       	ldi	r25, 0xFF	; 255
 4b4:	80 ec       	ldi	r24, 0xC0	; 192
 4b6:	08 95       	ret

000004b8 <__fp_pscA>:
 4b8:	00 24       	eor	r0, r0
 4ba:	0a 94       	dec	r0
 4bc:	16 16       	cp	r1, r22
 4be:	17 06       	cpc	r1, r23
 4c0:	18 06       	cpc	r1, r24
 4c2:	09 06       	cpc	r0, r25
 4c4:	08 95       	ret

000004c6 <__fp_pscB>:
 4c6:	00 24       	eor	r0, r0
 4c8:	0a 94       	dec	r0
 4ca:	12 16       	cp	r1, r18
 4cc:	13 06       	cpc	r1, r19
 4ce:	14 06       	cpc	r1, r20
 4d0:	05 06       	cpc	r0, r21
 4d2:	08 95       	ret

000004d4 <__fp_round>:
 4d4:	09 2e       	mov	r0, r25
 4d6:	03 94       	inc	r0
 4d8:	00 0c       	add	r0, r0
 4da:	11 f4       	brne	.+4      	; 0x4e0 <__fp_round+0xc>
 4dc:	88 23       	and	r24, r24
 4de:	52 f0       	brmi	.+20     	; 0x4f4 <__fp_round+0x20>
 4e0:	bb 0f       	add	r27, r27
 4e2:	40 f4       	brcc	.+16     	; 0x4f4 <__fp_round+0x20>
 4e4:	bf 2b       	or	r27, r31
 4e6:	11 f4       	brne	.+4      	; 0x4ec <__fp_round+0x18>
 4e8:	60 ff       	sbrs	r22, 0
 4ea:	04 c0       	rjmp	.+8      	; 0x4f4 <__fp_round+0x20>
 4ec:	6f 5f       	subi	r22, 0xFF	; 255
 4ee:	7f 4f       	sbci	r23, 0xFF	; 255
 4f0:	8f 4f       	sbci	r24, 0xFF	; 255
 4f2:	9f 4f       	sbci	r25, 0xFF	; 255
 4f4:	08 95       	ret

000004f6 <sprintf>:
 4f6:	0f 93       	push	r16
 4f8:	1f 93       	push	r17
 4fa:	cf 93       	push	r28
 4fc:	df 93       	push	r29
 4fe:	cd b7       	in	r28, 0x3d	; 61
 500:	de b7       	in	r29, 0x3e	; 62
 502:	2e 97       	sbiw	r28, 0x0e	; 14
 504:	0f b6       	in	r0, 0x3f	; 63
 506:	f8 94       	cli
 508:	de bf       	out	0x3e, r29	; 62
 50a:	0f be       	out	0x3f, r0	; 63
 50c:	cd bf       	out	0x3d, r28	; 61
 50e:	0e 89       	ldd	r16, Y+22	; 0x16
 510:	1f 89       	ldd	r17, Y+23	; 0x17
 512:	86 e0       	ldi	r24, 0x06	; 6
 514:	8c 83       	std	Y+4, r24	; 0x04
 516:	1a 83       	std	Y+2, r17	; 0x02
 518:	09 83       	std	Y+1, r16	; 0x01
 51a:	8f ef       	ldi	r24, 0xFF	; 255
 51c:	9f e7       	ldi	r25, 0x7F	; 127
 51e:	9e 83       	std	Y+6, r25	; 0x06
 520:	8d 83       	std	Y+5, r24	; 0x05
 522:	ae 01       	movw	r20, r28
 524:	46 5e       	subi	r20, 0xE6	; 230
 526:	5f 4f       	sbci	r21, 0xFF	; 255
 528:	68 8d       	ldd	r22, Y+24	; 0x18
 52a:	79 8d       	ldd	r23, Y+25	; 0x19
 52c:	ce 01       	movw	r24, r28
 52e:	01 96       	adiw	r24, 0x01	; 1
 530:	10 d0       	rcall	.+32     	; 0x552 <vfprintf>
 532:	ef 81       	ldd	r30, Y+7	; 0x07
 534:	f8 85       	ldd	r31, Y+8	; 0x08
 536:	e0 0f       	add	r30, r16
 538:	f1 1f       	adc	r31, r17
 53a:	10 82       	st	Z, r1
 53c:	2e 96       	adiw	r28, 0x0e	; 14
 53e:	0f b6       	in	r0, 0x3f	; 63
 540:	f8 94       	cli
 542:	de bf       	out	0x3e, r29	; 62
 544:	0f be       	out	0x3f, r0	; 63
 546:	cd bf       	out	0x3d, r28	; 61
 548:	df 91       	pop	r29
 54a:	cf 91       	pop	r28
 54c:	1f 91       	pop	r17
 54e:	0f 91       	pop	r16
 550:	08 95       	ret

00000552 <vfprintf>:
 552:	2f 92       	push	r2
 554:	3f 92       	push	r3
 556:	4f 92       	push	r4
 558:	5f 92       	push	r5
 55a:	6f 92       	push	r6
 55c:	7f 92       	push	r7
 55e:	8f 92       	push	r8
 560:	9f 92       	push	r9
 562:	af 92       	push	r10
 564:	bf 92       	push	r11
 566:	cf 92       	push	r12
 568:	df 92       	push	r13
 56a:	ef 92       	push	r14
 56c:	ff 92       	push	r15
 56e:	0f 93       	push	r16
 570:	1f 93       	push	r17
 572:	cf 93       	push	r28
 574:	df 93       	push	r29
 576:	cd b7       	in	r28, 0x3d	; 61
 578:	de b7       	in	r29, 0x3e	; 62
 57a:	2b 97       	sbiw	r28, 0x0b	; 11
 57c:	0f b6       	in	r0, 0x3f	; 63
 57e:	f8 94       	cli
 580:	de bf       	out	0x3e, r29	; 62
 582:	0f be       	out	0x3f, r0	; 63
 584:	cd bf       	out	0x3d, r28	; 61
 586:	6c 01       	movw	r12, r24
 588:	7b 01       	movw	r14, r22
 58a:	8a 01       	movw	r16, r20
 58c:	fc 01       	movw	r30, r24
 58e:	17 82       	std	Z+7, r1	; 0x07
 590:	16 82       	std	Z+6, r1	; 0x06
 592:	83 81       	ldd	r24, Z+3	; 0x03
 594:	81 ff       	sbrs	r24, 1
 596:	bf c1       	rjmp	.+894    	; 0x916 <vfprintf+0x3c4>
 598:	ce 01       	movw	r24, r28
 59a:	01 96       	adiw	r24, 0x01	; 1
 59c:	3c 01       	movw	r6, r24
 59e:	f6 01       	movw	r30, r12
 5a0:	93 81       	ldd	r25, Z+3	; 0x03
 5a2:	f7 01       	movw	r30, r14
 5a4:	93 fd       	sbrc	r25, 3
 5a6:	85 91       	lpm	r24, Z+
 5a8:	93 ff       	sbrs	r25, 3
 5aa:	81 91       	ld	r24, Z+
 5ac:	7f 01       	movw	r14, r30
 5ae:	88 23       	and	r24, r24
 5b0:	09 f4       	brne	.+2      	; 0x5b4 <vfprintf+0x62>
 5b2:	ad c1       	rjmp	.+858    	; 0x90e <vfprintf+0x3bc>
 5b4:	85 32       	cpi	r24, 0x25	; 37
 5b6:	39 f4       	brne	.+14     	; 0x5c6 <vfprintf+0x74>
 5b8:	93 fd       	sbrc	r25, 3
 5ba:	85 91       	lpm	r24, Z+
 5bc:	93 ff       	sbrs	r25, 3
 5be:	81 91       	ld	r24, Z+
 5c0:	7f 01       	movw	r14, r30
 5c2:	85 32       	cpi	r24, 0x25	; 37
 5c4:	21 f4       	brne	.+8      	; 0x5ce <vfprintf+0x7c>
 5c6:	b6 01       	movw	r22, r12
 5c8:	90 e0       	ldi	r25, 0x00	; 0
 5ca:	d6 d1       	rcall	.+940    	; 0x978 <fputc>
 5cc:	e8 cf       	rjmp	.-48     	; 0x59e <vfprintf+0x4c>
 5ce:	91 2c       	mov	r9, r1
 5d0:	21 2c       	mov	r2, r1
 5d2:	31 2c       	mov	r3, r1
 5d4:	ff e1       	ldi	r31, 0x1F	; 31
 5d6:	f3 15       	cp	r31, r3
 5d8:	d8 f0       	brcs	.+54     	; 0x610 <vfprintf+0xbe>
 5da:	8b 32       	cpi	r24, 0x2B	; 43
 5dc:	79 f0       	breq	.+30     	; 0x5fc <vfprintf+0xaa>
 5de:	38 f4       	brcc	.+14     	; 0x5ee <vfprintf+0x9c>
 5e0:	80 32       	cpi	r24, 0x20	; 32
 5e2:	79 f0       	breq	.+30     	; 0x602 <vfprintf+0xb0>
 5e4:	83 32       	cpi	r24, 0x23	; 35
 5e6:	a1 f4       	brne	.+40     	; 0x610 <vfprintf+0xbe>
 5e8:	23 2d       	mov	r18, r3
 5ea:	20 61       	ori	r18, 0x10	; 16
 5ec:	1d c0       	rjmp	.+58     	; 0x628 <vfprintf+0xd6>
 5ee:	8d 32       	cpi	r24, 0x2D	; 45
 5f0:	61 f0       	breq	.+24     	; 0x60a <vfprintf+0xb8>
 5f2:	80 33       	cpi	r24, 0x30	; 48
 5f4:	69 f4       	brne	.+26     	; 0x610 <vfprintf+0xbe>
 5f6:	23 2d       	mov	r18, r3
 5f8:	21 60       	ori	r18, 0x01	; 1
 5fa:	16 c0       	rjmp	.+44     	; 0x628 <vfprintf+0xd6>
 5fc:	83 2d       	mov	r24, r3
 5fe:	82 60       	ori	r24, 0x02	; 2
 600:	38 2e       	mov	r3, r24
 602:	e3 2d       	mov	r30, r3
 604:	e4 60       	ori	r30, 0x04	; 4
 606:	3e 2e       	mov	r3, r30
 608:	2a c0       	rjmp	.+84     	; 0x65e <vfprintf+0x10c>
 60a:	f3 2d       	mov	r31, r3
 60c:	f8 60       	ori	r31, 0x08	; 8
 60e:	1d c0       	rjmp	.+58     	; 0x64a <vfprintf+0xf8>
 610:	37 fc       	sbrc	r3, 7
 612:	2d c0       	rjmp	.+90     	; 0x66e <vfprintf+0x11c>
 614:	20 ed       	ldi	r18, 0xD0	; 208
 616:	28 0f       	add	r18, r24
 618:	2a 30       	cpi	r18, 0x0A	; 10
 61a:	40 f0       	brcs	.+16     	; 0x62c <vfprintf+0xda>
 61c:	8e 32       	cpi	r24, 0x2E	; 46
 61e:	b9 f4       	brne	.+46     	; 0x64e <vfprintf+0xfc>
 620:	36 fc       	sbrc	r3, 6
 622:	75 c1       	rjmp	.+746    	; 0x90e <vfprintf+0x3bc>
 624:	23 2d       	mov	r18, r3
 626:	20 64       	ori	r18, 0x40	; 64
 628:	32 2e       	mov	r3, r18
 62a:	19 c0       	rjmp	.+50     	; 0x65e <vfprintf+0x10c>
 62c:	36 fe       	sbrs	r3, 6
 62e:	06 c0       	rjmp	.+12     	; 0x63c <vfprintf+0xea>
 630:	8a e0       	ldi	r24, 0x0A	; 10
 632:	98 9e       	mul	r9, r24
 634:	20 0d       	add	r18, r0
 636:	11 24       	eor	r1, r1
 638:	92 2e       	mov	r9, r18
 63a:	11 c0       	rjmp	.+34     	; 0x65e <vfprintf+0x10c>
 63c:	ea e0       	ldi	r30, 0x0A	; 10
 63e:	2e 9e       	mul	r2, r30
 640:	20 0d       	add	r18, r0
 642:	11 24       	eor	r1, r1
 644:	22 2e       	mov	r2, r18
 646:	f3 2d       	mov	r31, r3
 648:	f0 62       	ori	r31, 0x20	; 32
 64a:	3f 2e       	mov	r3, r31
 64c:	08 c0       	rjmp	.+16     	; 0x65e <vfprintf+0x10c>
 64e:	8c 36       	cpi	r24, 0x6C	; 108
 650:	21 f4       	brne	.+8      	; 0x65a <vfprintf+0x108>
 652:	83 2d       	mov	r24, r3
 654:	80 68       	ori	r24, 0x80	; 128
 656:	38 2e       	mov	r3, r24
 658:	02 c0       	rjmp	.+4      	; 0x65e <vfprintf+0x10c>
 65a:	88 36       	cpi	r24, 0x68	; 104
 65c:	41 f4       	brne	.+16     	; 0x66e <vfprintf+0x11c>
 65e:	f7 01       	movw	r30, r14
 660:	93 fd       	sbrc	r25, 3
 662:	85 91       	lpm	r24, Z+
 664:	93 ff       	sbrs	r25, 3
 666:	81 91       	ld	r24, Z+
 668:	7f 01       	movw	r14, r30
 66a:	81 11       	cpse	r24, r1
 66c:	b3 cf       	rjmp	.-154    	; 0x5d4 <vfprintf+0x82>
 66e:	98 2f       	mov	r25, r24
 670:	9f 7d       	andi	r25, 0xDF	; 223
 672:	95 54       	subi	r25, 0x45	; 69
 674:	93 30       	cpi	r25, 0x03	; 3
 676:	28 f4       	brcc	.+10     	; 0x682 <vfprintf+0x130>
 678:	0c 5f       	subi	r16, 0xFC	; 252
 67a:	1f 4f       	sbci	r17, 0xFF	; 255
 67c:	9f e3       	ldi	r25, 0x3F	; 63
 67e:	99 83       	std	Y+1, r25	; 0x01
 680:	0d c0       	rjmp	.+26     	; 0x69c <vfprintf+0x14a>
 682:	83 36       	cpi	r24, 0x63	; 99
 684:	31 f0       	breq	.+12     	; 0x692 <vfprintf+0x140>
 686:	83 37       	cpi	r24, 0x73	; 115
 688:	71 f0       	breq	.+28     	; 0x6a6 <vfprintf+0x154>
 68a:	83 35       	cpi	r24, 0x53	; 83
 68c:	09 f0       	breq	.+2      	; 0x690 <vfprintf+0x13e>
 68e:	55 c0       	rjmp	.+170    	; 0x73a <vfprintf+0x1e8>
 690:	20 c0       	rjmp	.+64     	; 0x6d2 <vfprintf+0x180>
 692:	f8 01       	movw	r30, r16
 694:	80 81       	ld	r24, Z
 696:	89 83       	std	Y+1, r24	; 0x01
 698:	0e 5f       	subi	r16, 0xFE	; 254
 69a:	1f 4f       	sbci	r17, 0xFF	; 255
 69c:	88 24       	eor	r8, r8
 69e:	83 94       	inc	r8
 6a0:	91 2c       	mov	r9, r1
 6a2:	53 01       	movw	r10, r6
 6a4:	12 c0       	rjmp	.+36     	; 0x6ca <vfprintf+0x178>
 6a6:	28 01       	movw	r4, r16
 6a8:	f2 e0       	ldi	r31, 0x02	; 2
 6aa:	4f 0e       	add	r4, r31
 6ac:	51 1c       	adc	r5, r1
 6ae:	f8 01       	movw	r30, r16
 6b0:	a0 80       	ld	r10, Z
 6b2:	b1 80       	ldd	r11, Z+1	; 0x01
 6b4:	36 fe       	sbrs	r3, 6
 6b6:	03 c0       	rjmp	.+6      	; 0x6be <vfprintf+0x16c>
 6b8:	69 2d       	mov	r22, r9
 6ba:	70 e0       	ldi	r23, 0x00	; 0
 6bc:	02 c0       	rjmp	.+4      	; 0x6c2 <vfprintf+0x170>
 6be:	6f ef       	ldi	r22, 0xFF	; 255
 6c0:	7f ef       	ldi	r23, 0xFF	; 255
 6c2:	c5 01       	movw	r24, r10
 6c4:	4e d1       	rcall	.+668    	; 0x962 <strnlen>
 6c6:	4c 01       	movw	r8, r24
 6c8:	82 01       	movw	r16, r4
 6ca:	f3 2d       	mov	r31, r3
 6cc:	ff 77       	andi	r31, 0x7F	; 127
 6ce:	3f 2e       	mov	r3, r31
 6d0:	15 c0       	rjmp	.+42     	; 0x6fc <vfprintf+0x1aa>
 6d2:	28 01       	movw	r4, r16
 6d4:	22 e0       	ldi	r18, 0x02	; 2
 6d6:	42 0e       	add	r4, r18
 6d8:	51 1c       	adc	r5, r1
 6da:	f8 01       	movw	r30, r16
 6dc:	a0 80       	ld	r10, Z
 6de:	b1 80       	ldd	r11, Z+1	; 0x01
 6e0:	36 fe       	sbrs	r3, 6
 6e2:	03 c0       	rjmp	.+6      	; 0x6ea <vfprintf+0x198>
 6e4:	69 2d       	mov	r22, r9
 6e6:	70 e0       	ldi	r23, 0x00	; 0
 6e8:	02 c0       	rjmp	.+4      	; 0x6ee <vfprintf+0x19c>
 6ea:	6f ef       	ldi	r22, 0xFF	; 255
 6ec:	7f ef       	ldi	r23, 0xFF	; 255
 6ee:	c5 01       	movw	r24, r10
 6f0:	2d d1       	rcall	.+602    	; 0x94c <strnlen_P>
 6f2:	4c 01       	movw	r8, r24
 6f4:	f3 2d       	mov	r31, r3
 6f6:	f0 68       	ori	r31, 0x80	; 128
 6f8:	3f 2e       	mov	r3, r31
 6fa:	82 01       	movw	r16, r4
 6fc:	33 fc       	sbrc	r3, 3
 6fe:	19 c0       	rjmp	.+50     	; 0x732 <vfprintf+0x1e0>
 700:	82 2d       	mov	r24, r2
 702:	90 e0       	ldi	r25, 0x00	; 0
 704:	88 16       	cp	r8, r24
 706:	99 06       	cpc	r9, r25
 708:	a0 f4       	brcc	.+40     	; 0x732 <vfprintf+0x1e0>
 70a:	b6 01       	movw	r22, r12
 70c:	80 e2       	ldi	r24, 0x20	; 32
 70e:	90 e0       	ldi	r25, 0x00	; 0
 710:	33 d1       	rcall	.+614    	; 0x978 <fputc>
 712:	2a 94       	dec	r2
 714:	f5 cf       	rjmp	.-22     	; 0x700 <vfprintf+0x1ae>
 716:	f5 01       	movw	r30, r10
 718:	37 fc       	sbrc	r3, 7
 71a:	85 91       	lpm	r24, Z+
 71c:	37 fe       	sbrs	r3, 7
 71e:	81 91       	ld	r24, Z+
 720:	5f 01       	movw	r10, r30
 722:	b6 01       	movw	r22, r12
 724:	90 e0       	ldi	r25, 0x00	; 0
 726:	28 d1       	rcall	.+592    	; 0x978 <fputc>
 728:	21 10       	cpse	r2, r1
 72a:	2a 94       	dec	r2
 72c:	21 e0       	ldi	r18, 0x01	; 1
 72e:	82 1a       	sub	r8, r18
 730:	91 08       	sbc	r9, r1
 732:	81 14       	cp	r8, r1
 734:	91 04       	cpc	r9, r1
 736:	79 f7       	brne	.-34     	; 0x716 <vfprintf+0x1c4>
 738:	e1 c0       	rjmp	.+450    	; 0x8fc <vfprintf+0x3aa>
 73a:	84 36       	cpi	r24, 0x64	; 100
 73c:	11 f0       	breq	.+4      	; 0x742 <vfprintf+0x1f0>
 73e:	89 36       	cpi	r24, 0x69	; 105
 740:	39 f5       	brne	.+78     	; 0x790 <vfprintf+0x23e>
 742:	f8 01       	movw	r30, r16
 744:	37 fe       	sbrs	r3, 7
 746:	07 c0       	rjmp	.+14     	; 0x756 <vfprintf+0x204>
 748:	60 81       	ld	r22, Z
 74a:	71 81       	ldd	r23, Z+1	; 0x01
 74c:	82 81       	ldd	r24, Z+2	; 0x02
 74e:	93 81       	ldd	r25, Z+3	; 0x03
 750:	0c 5f       	subi	r16, 0xFC	; 252
 752:	1f 4f       	sbci	r17, 0xFF	; 255
 754:	08 c0       	rjmp	.+16     	; 0x766 <vfprintf+0x214>
 756:	60 81       	ld	r22, Z
 758:	71 81       	ldd	r23, Z+1	; 0x01
 75a:	07 2e       	mov	r0, r23
 75c:	00 0c       	add	r0, r0
 75e:	88 0b       	sbc	r24, r24
 760:	99 0b       	sbc	r25, r25
 762:	0e 5f       	subi	r16, 0xFE	; 254
 764:	1f 4f       	sbci	r17, 0xFF	; 255
 766:	f3 2d       	mov	r31, r3
 768:	ff 76       	andi	r31, 0x6F	; 111
 76a:	3f 2e       	mov	r3, r31
 76c:	97 ff       	sbrs	r25, 7
 76e:	09 c0       	rjmp	.+18     	; 0x782 <vfprintf+0x230>
 770:	90 95       	com	r25
 772:	80 95       	com	r24
 774:	70 95       	com	r23
 776:	61 95       	neg	r22
 778:	7f 4f       	sbci	r23, 0xFF	; 255
 77a:	8f 4f       	sbci	r24, 0xFF	; 255
 77c:	9f 4f       	sbci	r25, 0xFF	; 255
 77e:	f0 68       	ori	r31, 0x80	; 128
 780:	3f 2e       	mov	r3, r31
 782:	2a e0       	ldi	r18, 0x0A	; 10
 784:	30 e0       	ldi	r19, 0x00	; 0
 786:	a3 01       	movw	r20, r6
 788:	33 d1       	rcall	.+614    	; 0x9f0 <__ultoa_invert>
 78a:	88 2e       	mov	r8, r24
 78c:	86 18       	sub	r8, r6
 78e:	44 c0       	rjmp	.+136    	; 0x818 <vfprintf+0x2c6>
 790:	85 37       	cpi	r24, 0x75	; 117
 792:	31 f4       	brne	.+12     	; 0x7a0 <vfprintf+0x24e>
 794:	23 2d       	mov	r18, r3
 796:	2f 7e       	andi	r18, 0xEF	; 239
 798:	b2 2e       	mov	r11, r18
 79a:	2a e0       	ldi	r18, 0x0A	; 10
 79c:	30 e0       	ldi	r19, 0x00	; 0
 79e:	25 c0       	rjmp	.+74     	; 0x7ea <vfprintf+0x298>
 7a0:	93 2d       	mov	r25, r3
 7a2:	99 7f       	andi	r25, 0xF9	; 249
 7a4:	b9 2e       	mov	r11, r25
 7a6:	8f 36       	cpi	r24, 0x6F	; 111
 7a8:	c1 f0       	breq	.+48     	; 0x7da <vfprintf+0x288>
 7aa:	18 f4       	brcc	.+6      	; 0x7b2 <vfprintf+0x260>
 7ac:	88 35       	cpi	r24, 0x58	; 88
 7ae:	79 f0       	breq	.+30     	; 0x7ce <vfprintf+0x27c>
 7b0:	ae c0       	rjmp	.+348    	; 0x90e <vfprintf+0x3bc>
 7b2:	80 37       	cpi	r24, 0x70	; 112
 7b4:	19 f0       	breq	.+6      	; 0x7bc <vfprintf+0x26a>
 7b6:	88 37       	cpi	r24, 0x78	; 120
 7b8:	21 f0       	breq	.+8      	; 0x7c2 <vfprintf+0x270>
 7ba:	a9 c0       	rjmp	.+338    	; 0x90e <vfprintf+0x3bc>
 7bc:	e9 2f       	mov	r30, r25
 7be:	e0 61       	ori	r30, 0x10	; 16
 7c0:	be 2e       	mov	r11, r30
 7c2:	b4 fe       	sbrs	r11, 4
 7c4:	0d c0       	rjmp	.+26     	; 0x7e0 <vfprintf+0x28e>
 7c6:	fb 2d       	mov	r31, r11
 7c8:	f4 60       	ori	r31, 0x04	; 4
 7ca:	bf 2e       	mov	r11, r31
 7cc:	09 c0       	rjmp	.+18     	; 0x7e0 <vfprintf+0x28e>
 7ce:	34 fe       	sbrs	r3, 4
 7d0:	0a c0       	rjmp	.+20     	; 0x7e6 <vfprintf+0x294>
 7d2:	29 2f       	mov	r18, r25
 7d4:	26 60       	ori	r18, 0x06	; 6
 7d6:	b2 2e       	mov	r11, r18
 7d8:	06 c0       	rjmp	.+12     	; 0x7e6 <vfprintf+0x294>
 7da:	28 e0       	ldi	r18, 0x08	; 8
 7dc:	30 e0       	ldi	r19, 0x00	; 0
 7de:	05 c0       	rjmp	.+10     	; 0x7ea <vfprintf+0x298>
 7e0:	20 e1       	ldi	r18, 0x10	; 16
 7e2:	30 e0       	ldi	r19, 0x00	; 0
 7e4:	02 c0       	rjmp	.+4      	; 0x7ea <vfprintf+0x298>
 7e6:	20 e1       	ldi	r18, 0x10	; 16
 7e8:	32 e0       	ldi	r19, 0x02	; 2
 7ea:	f8 01       	movw	r30, r16
 7ec:	b7 fe       	sbrs	r11, 7
 7ee:	07 c0       	rjmp	.+14     	; 0x7fe <vfprintf+0x2ac>
 7f0:	60 81       	ld	r22, Z
 7f2:	71 81       	ldd	r23, Z+1	; 0x01
 7f4:	82 81       	ldd	r24, Z+2	; 0x02
 7f6:	93 81       	ldd	r25, Z+3	; 0x03
 7f8:	0c 5f       	subi	r16, 0xFC	; 252
 7fa:	1f 4f       	sbci	r17, 0xFF	; 255
 7fc:	06 c0       	rjmp	.+12     	; 0x80a <vfprintf+0x2b8>
 7fe:	60 81       	ld	r22, Z
 800:	71 81       	ldd	r23, Z+1	; 0x01
 802:	80 e0       	ldi	r24, 0x00	; 0
 804:	90 e0       	ldi	r25, 0x00	; 0
 806:	0e 5f       	subi	r16, 0xFE	; 254
 808:	1f 4f       	sbci	r17, 0xFF	; 255
 80a:	a3 01       	movw	r20, r6
 80c:	f1 d0       	rcall	.+482    	; 0x9f0 <__ultoa_invert>
 80e:	88 2e       	mov	r8, r24
 810:	86 18       	sub	r8, r6
 812:	fb 2d       	mov	r31, r11
 814:	ff 77       	andi	r31, 0x7F	; 127
 816:	3f 2e       	mov	r3, r31
 818:	36 fe       	sbrs	r3, 6
 81a:	0d c0       	rjmp	.+26     	; 0x836 <vfprintf+0x2e4>
 81c:	23 2d       	mov	r18, r3
 81e:	2e 7f       	andi	r18, 0xFE	; 254
 820:	a2 2e       	mov	r10, r18
 822:	89 14       	cp	r8, r9
 824:	58 f4       	brcc	.+22     	; 0x83c <vfprintf+0x2ea>
 826:	34 fe       	sbrs	r3, 4
 828:	0b c0       	rjmp	.+22     	; 0x840 <vfprintf+0x2ee>
 82a:	32 fc       	sbrc	r3, 2
 82c:	09 c0       	rjmp	.+18     	; 0x840 <vfprintf+0x2ee>
 82e:	83 2d       	mov	r24, r3
 830:	8e 7e       	andi	r24, 0xEE	; 238
 832:	a8 2e       	mov	r10, r24
 834:	05 c0       	rjmp	.+10     	; 0x840 <vfprintf+0x2ee>
 836:	b8 2c       	mov	r11, r8
 838:	a3 2c       	mov	r10, r3
 83a:	03 c0       	rjmp	.+6      	; 0x842 <vfprintf+0x2f0>
 83c:	b8 2c       	mov	r11, r8
 83e:	01 c0       	rjmp	.+2      	; 0x842 <vfprintf+0x2f0>
 840:	b9 2c       	mov	r11, r9
 842:	a4 fe       	sbrs	r10, 4
 844:	0f c0       	rjmp	.+30     	; 0x864 <vfprintf+0x312>
 846:	fe 01       	movw	r30, r28
 848:	e8 0d       	add	r30, r8
 84a:	f1 1d       	adc	r31, r1
 84c:	80 81       	ld	r24, Z
 84e:	80 33       	cpi	r24, 0x30	; 48
 850:	21 f4       	brne	.+8      	; 0x85a <vfprintf+0x308>
 852:	9a 2d       	mov	r25, r10
 854:	99 7e       	andi	r25, 0xE9	; 233
 856:	a9 2e       	mov	r10, r25
 858:	09 c0       	rjmp	.+18     	; 0x86c <vfprintf+0x31a>
 85a:	a2 fe       	sbrs	r10, 2
 85c:	06 c0       	rjmp	.+12     	; 0x86a <vfprintf+0x318>
 85e:	b3 94       	inc	r11
 860:	b3 94       	inc	r11
 862:	04 c0       	rjmp	.+8      	; 0x86c <vfprintf+0x31a>
 864:	8a 2d       	mov	r24, r10
 866:	86 78       	andi	r24, 0x86	; 134
 868:	09 f0       	breq	.+2      	; 0x86c <vfprintf+0x31a>
 86a:	b3 94       	inc	r11
 86c:	a3 fc       	sbrc	r10, 3
 86e:	10 c0       	rjmp	.+32     	; 0x890 <vfprintf+0x33e>
 870:	a0 fe       	sbrs	r10, 0
 872:	06 c0       	rjmp	.+12     	; 0x880 <vfprintf+0x32e>
 874:	b2 14       	cp	r11, r2
 876:	80 f4       	brcc	.+32     	; 0x898 <vfprintf+0x346>
 878:	28 0c       	add	r2, r8
 87a:	92 2c       	mov	r9, r2
 87c:	9b 18       	sub	r9, r11
 87e:	0d c0       	rjmp	.+26     	; 0x89a <vfprintf+0x348>
 880:	b2 14       	cp	r11, r2
 882:	58 f4       	brcc	.+22     	; 0x89a <vfprintf+0x348>
 884:	b6 01       	movw	r22, r12
 886:	80 e2       	ldi	r24, 0x20	; 32
 888:	90 e0       	ldi	r25, 0x00	; 0
 88a:	76 d0       	rcall	.+236    	; 0x978 <fputc>
 88c:	b3 94       	inc	r11
 88e:	f8 cf       	rjmp	.-16     	; 0x880 <vfprintf+0x32e>
 890:	b2 14       	cp	r11, r2
 892:	18 f4       	brcc	.+6      	; 0x89a <vfprintf+0x348>
 894:	2b 18       	sub	r2, r11
 896:	02 c0       	rjmp	.+4      	; 0x89c <vfprintf+0x34a>
 898:	98 2c       	mov	r9, r8
 89a:	21 2c       	mov	r2, r1
 89c:	a4 fe       	sbrs	r10, 4
 89e:	0f c0       	rjmp	.+30     	; 0x8be <vfprintf+0x36c>
 8a0:	b6 01       	movw	r22, r12
 8a2:	80 e3       	ldi	r24, 0x30	; 48
 8a4:	90 e0       	ldi	r25, 0x00	; 0
 8a6:	68 d0       	rcall	.+208    	; 0x978 <fputc>
 8a8:	a2 fe       	sbrs	r10, 2
 8aa:	16 c0       	rjmp	.+44     	; 0x8d8 <vfprintf+0x386>
 8ac:	a1 fc       	sbrc	r10, 1
 8ae:	03 c0       	rjmp	.+6      	; 0x8b6 <vfprintf+0x364>
 8b0:	88 e7       	ldi	r24, 0x78	; 120
 8b2:	90 e0       	ldi	r25, 0x00	; 0
 8b4:	02 c0       	rjmp	.+4      	; 0x8ba <vfprintf+0x368>
 8b6:	88 e5       	ldi	r24, 0x58	; 88
 8b8:	90 e0       	ldi	r25, 0x00	; 0
 8ba:	b6 01       	movw	r22, r12
 8bc:	0c c0       	rjmp	.+24     	; 0x8d6 <vfprintf+0x384>
 8be:	8a 2d       	mov	r24, r10
 8c0:	86 78       	andi	r24, 0x86	; 134
 8c2:	51 f0       	breq	.+20     	; 0x8d8 <vfprintf+0x386>
 8c4:	a1 fe       	sbrs	r10, 1
 8c6:	02 c0       	rjmp	.+4      	; 0x8cc <vfprintf+0x37a>
 8c8:	8b e2       	ldi	r24, 0x2B	; 43
 8ca:	01 c0       	rjmp	.+2      	; 0x8ce <vfprintf+0x37c>
 8cc:	80 e2       	ldi	r24, 0x20	; 32
 8ce:	a7 fc       	sbrc	r10, 7
 8d0:	8d e2       	ldi	r24, 0x2D	; 45
 8d2:	b6 01       	movw	r22, r12
 8d4:	90 e0       	ldi	r25, 0x00	; 0
 8d6:	50 d0       	rcall	.+160    	; 0x978 <fputc>
 8d8:	89 14       	cp	r8, r9
 8da:	30 f4       	brcc	.+12     	; 0x8e8 <vfprintf+0x396>
 8dc:	b6 01       	movw	r22, r12
 8de:	80 e3       	ldi	r24, 0x30	; 48
 8e0:	90 e0       	ldi	r25, 0x00	; 0
 8e2:	4a d0       	rcall	.+148    	; 0x978 <fputc>
 8e4:	9a 94       	dec	r9
 8e6:	f8 cf       	rjmp	.-16     	; 0x8d8 <vfprintf+0x386>
 8e8:	8a 94       	dec	r8
 8ea:	f3 01       	movw	r30, r6
 8ec:	e8 0d       	add	r30, r8
 8ee:	f1 1d       	adc	r31, r1
 8f0:	80 81       	ld	r24, Z
 8f2:	b6 01       	movw	r22, r12
 8f4:	90 e0       	ldi	r25, 0x00	; 0
 8f6:	40 d0       	rcall	.+128    	; 0x978 <fputc>
 8f8:	81 10       	cpse	r8, r1
 8fa:	f6 cf       	rjmp	.-20     	; 0x8e8 <vfprintf+0x396>
 8fc:	22 20       	and	r2, r2
 8fe:	09 f4       	brne	.+2      	; 0x902 <vfprintf+0x3b0>
 900:	4e ce       	rjmp	.-868    	; 0x59e <vfprintf+0x4c>
 902:	b6 01       	movw	r22, r12
 904:	80 e2       	ldi	r24, 0x20	; 32
 906:	90 e0       	ldi	r25, 0x00	; 0
 908:	37 d0       	rcall	.+110    	; 0x978 <fputc>
 90a:	2a 94       	dec	r2
 90c:	f7 cf       	rjmp	.-18     	; 0x8fc <vfprintf+0x3aa>
 90e:	f6 01       	movw	r30, r12
 910:	86 81       	ldd	r24, Z+6	; 0x06
 912:	97 81       	ldd	r25, Z+7	; 0x07
 914:	02 c0       	rjmp	.+4      	; 0x91a <vfprintf+0x3c8>
 916:	8f ef       	ldi	r24, 0xFF	; 255
 918:	9f ef       	ldi	r25, 0xFF	; 255
 91a:	2b 96       	adiw	r28, 0x0b	; 11
 91c:	0f b6       	in	r0, 0x3f	; 63
 91e:	f8 94       	cli
 920:	de bf       	out	0x3e, r29	; 62
 922:	0f be       	out	0x3f, r0	; 63
 924:	cd bf       	out	0x3d, r28	; 61
 926:	df 91       	pop	r29
 928:	cf 91       	pop	r28
 92a:	1f 91       	pop	r17
 92c:	0f 91       	pop	r16
 92e:	ff 90       	pop	r15
 930:	ef 90       	pop	r14
 932:	df 90       	pop	r13
 934:	cf 90       	pop	r12
 936:	bf 90       	pop	r11
 938:	af 90       	pop	r10
 93a:	9f 90       	pop	r9
 93c:	8f 90       	pop	r8
 93e:	7f 90       	pop	r7
 940:	6f 90       	pop	r6
 942:	5f 90       	pop	r5
 944:	4f 90       	pop	r4
 946:	3f 90       	pop	r3
 948:	2f 90       	pop	r2
 94a:	08 95       	ret

0000094c <strnlen_P>:
 94c:	fc 01       	movw	r30, r24
 94e:	05 90       	lpm	r0, Z+
 950:	61 50       	subi	r22, 0x01	; 1
 952:	70 40       	sbci	r23, 0x00	; 0
 954:	01 10       	cpse	r0, r1
 956:	d8 f7       	brcc	.-10     	; 0x94e <strnlen_P+0x2>
 958:	80 95       	com	r24
 95a:	90 95       	com	r25
 95c:	8e 0f       	add	r24, r30
 95e:	9f 1f       	adc	r25, r31
 960:	08 95       	ret

00000962 <strnlen>:
 962:	fc 01       	movw	r30, r24
 964:	61 50       	subi	r22, 0x01	; 1
 966:	70 40       	sbci	r23, 0x00	; 0
 968:	01 90       	ld	r0, Z+
 96a:	01 10       	cpse	r0, r1
 96c:	d8 f7       	brcc	.-10     	; 0x964 <strnlen+0x2>
 96e:	80 95       	com	r24
 970:	90 95       	com	r25
 972:	8e 0f       	add	r24, r30
 974:	9f 1f       	adc	r25, r31
 976:	08 95       	ret

00000978 <fputc>:
 978:	0f 93       	push	r16
 97a:	1f 93       	push	r17
 97c:	cf 93       	push	r28
 97e:	df 93       	push	r29
 980:	fb 01       	movw	r30, r22
 982:	23 81       	ldd	r18, Z+3	; 0x03
 984:	21 fd       	sbrc	r18, 1
 986:	03 c0       	rjmp	.+6      	; 0x98e <fputc+0x16>
 988:	8f ef       	ldi	r24, 0xFF	; 255
 98a:	9f ef       	ldi	r25, 0xFF	; 255
 98c:	2c c0       	rjmp	.+88     	; 0x9e6 <fputc+0x6e>
 98e:	22 ff       	sbrs	r18, 2
 990:	16 c0       	rjmp	.+44     	; 0x9be <fputc+0x46>
 992:	46 81       	ldd	r20, Z+6	; 0x06
 994:	57 81       	ldd	r21, Z+7	; 0x07
 996:	24 81       	ldd	r18, Z+4	; 0x04
 998:	35 81       	ldd	r19, Z+5	; 0x05
 99a:	42 17       	cp	r20, r18
 99c:	53 07       	cpc	r21, r19
 99e:	44 f4       	brge	.+16     	; 0x9b0 <fputc+0x38>
 9a0:	a0 81       	ld	r26, Z
 9a2:	b1 81       	ldd	r27, Z+1	; 0x01
 9a4:	9d 01       	movw	r18, r26
 9a6:	2f 5f       	subi	r18, 0xFF	; 255
 9a8:	3f 4f       	sbci	r19, 0xFF	; 255
 9aa:	31 83       	std	Z+1, r19	; 0x01
 9ac:	20 83       	st	Z, r18
 9ae:	8c 93       	st	X, r24
 9b0:	26 81       	ldd	r18, Z+6	; 0x06
 9b2:	37 81       	ldd	r19, Z+7	; 0x07
 9b4:	2f 5f       	subi	r18, 0xFF	; 255
 9b6:	3f 4f       	sbci	r19, 0xFF	; 255
 9b8:	37 83       	std	Z+7, r19	; 0x07
 9ba:	26 83       	std	Z+6, r18	; 0x06
 9bc:	14 c0       	rjmp	.+40     	; 0x9e6 <fputc+0x6e>
 9be:	8b 01       	movw	r16, r22
 9c0:	ec 01       	movw	r28, r24
 9c2:	fb 01       	movw	r30, r22
 9c4:	00 84       	ldd	r0, Z+8	; 0x08
 9c6:	f1 85       	ldd	r31, Z+9	; 0x09
 9c8:	e0 2d       	mov	r30, r0
 9ca:	19 95       	eicall
 9cc:	89 2b       	or	r24, r25
 9ce:	e1 f6       	brne	.-72     	; 0x988 <fputc+0x10>
 9d0:	d8 01       	movw	r26, r16
 9d2:	16 96       	adiw	r26, 0x06	; 6
 9d4:	8d 91       	ld	r24, X+
 9d6:	9c 91       	ld	r25, X
 9d8:	17 97       	sbiw	r26, 0x07	; 7
 9da:	01 96       	adiw	r24, 0x01	; 1
 9dc:	17 96       	adiw	r26, 0x07	; 7
 9de:	9c 93       	st	X, r25
 9e0:	8e 93       	st	-X, r24
 9e2:	16 97       	sbiw	r26, 0x06	; 6
 9e4:	ce 01       	movw	r24, r28
 9e6:	df 91       	pop	r29
 9e8:	cf 91       	pop	r28
 9ea:	1f 91       	pop	r17
 9ec:	0f 91       	pop	r16
 9ee:	08 95       	ret

000009f0 <__ultoa_invert>:
 9f0:	fa 01       	movw	r30, r20
 9f2:	aa 27       	eor	r26, r26
 9f4:	28 30       	cpi	r18, 0x08	; 8
 9f6:	51 f1       	breq	.+84     	; 0xa4c <__ultoa_invert+0x5c>
 9f8:	20 31       	cpi	r18, 0x10	; 16
 9fa:	81 f1       	breq	.+96     	; 0xa5c <__ultoa_invert+0x6c>
 9fc:	e8 94       	clt
 9fe:	6f 93       	push	r22
 a00:	6e 7f       	andi	r22, 0xFE	; 254
 a02:	6e 5f       	subi	r22, 0xFE	; 254
 a04:	7f 4f       	sbci	r23, 0xFF	; 255
 a06:	8f 4f       	sbci	r24, 0xFF	; 255
 a08:	9f 4f       	sbci	r25, 0xFF	; 255
 a0a:	af 4f       	sbci	r26, 0xFF	; 255
 a0c:	b1 e0       	ldi	r27, 0x01	; 1
 a0e:	3e d0       	rcall	.+124    	; 0xa8c <__ultoa_invert+0x9c>
 a10:	b4 e0       	ldi	r27, 0x04	; 4
 a12:	3c d0       	rcall	.+120    	; 0xa8c <__ultoa_invert+0x9c>
 a14:	67 0f       	add	r22, r23
 a16:	78 1f       	adc	r23, r24
 a18:	89 1f       	adc	r24, r25
 a1a:	9a 1f       	adc	r25, r26
 a1c:	a1 1d       	adc	r26, r1
 a1e:	68 0f       	add	r22, r24
 a20:	79 1f       	adc	r23, r25
 a22:	8a 1f       	adc	r24, r26
 a24:	91 1d       	adc	r25, r1
 a26:	a1 1d       	adc	r26, r1
 a28:	6a 0f       	add	r22, r26
 a2a:	71 1d       	adc	r23, r1
 a2c:	81 1d       	adc	r24, r1
 a2e:	91 1d       	adc	r25, r1
 a30:	a1 1d       	adc	r26, r1
 a32:	20 d0       	rcall	.+64     	; 0xa74 <__ultoa_invert+0x84>
 a34:	09 f4       	brne	.+2      	; 0xa38 <__ultoa_invert+0x48>
 a36:	68 94       	set
 a38:	3f 91       	pop	r19
 a3a:	2a e0       	ldi	r18, 0x0A	; 10
 a3c:	26 9f       	mul	r18, r22
 a3e:	11 24       	eor	r1, r1
 a40:	30 19       	sub	r19, r0
 a42:	30 5d       	subi	r19, 0xD0	; 208
 a44:	31 93       	st	Z+, r19
 a46:	de f6       	brtc	.-74     	; 0x9fe <__ultoa_invert+0xe>
 a48:	cf 01       	movw	r24, r30
 a4a:	08 95       	ret
 a4c:	46 2f       	mov	r20, r22
 a4e:	47 70       	andi	r20, 0x07	; 7
 a50:	40 5d       	subi	r20, 0xD0	; 208
 a52:	41 93       	st	Z+, r20
 a54:	b3 e0       	ldi	r27, 0x03	; 3
 a56:	0f d0       	rcall	.+30     	; 0xa76 <__ultoa_invert+0x86>
 a58:	c9 f7       	brne	.-14     	; 0xa4c <__ultoa_invert+0x5c>
 a5a:	f6 cf       	rjmp	.-20     	; 0xa48 <__ultoa_invert+0x58>
 a5c:	46 2f       	mov	r20, r22
 a5e:	4f 70       	andi	r20, 0x0F	; 15
 a60:	40 5d       	subi	r20, 0xD0	; 208
 a62:	4a 33       	cpi	r20, 0x3A	; 58
 a64:	18 f0       	brcs	.+6      	; 0xa6c <__ultoa_invert+0x7c>
 a66:	49 5d       	subi	r20, 0xD9	; 217
 a68:	31 fd       	sbrc	r19, 1
 a6a:	40 52       	subi	r20, 0x20	; 32
 a6c:	41 93       	st	Z+, r20
 a6e:	02 d0       	rcall	.+4      	; 0xa74 <__ultoa_invert+0x84>
 a70:	a9 f7       	brne	.-22     	; 0xa5c <__ultoa_invert+0x6c>
 a72:	ea cf       	rjmp	.-44     	; 0xa48 <__ultoa_invert+0x58>
 a74:	b4 e0       	ldi	r27, 0x04	; 4
 a76:	a6 95       	lsr	r26
 a78:	97 95       	ror	r25
 a7a:	87 95       	ror	r24
 a7c:	77 95       	ror	r23
 a7e:	67 95       	ror	r22
 a80:	ba 95       	dec	r27
 a82:	c9 f7       	brne	.-14     	; 0xa76 <__ultoa_invert+0x86>
 a84:	00 97       	sbiw	r24, 0x00	; 0
 a86:	61 05       	cpc	r22, r1
 a88:	71 05       	cpc	r23, r1
 a8a:	08 95       	ret
 a8c:	9b 01       	movw	r18, r22
 a8e:	ac 01       	movw	r20, r24
 a90:	0a 2e       	mov	r0, r26
 a92:	06 94       	lsr	r0
 a94:	57 95       	ror	r21
 a96:	47 95       	ror	r20
 a98:	37 95       	ror	r19
 a9a:	27 95       	ror	r18
 a9c:	ba 95       	dec	r27
 a9e:	c9 f7       	brne	.-14     	; 0xa92 <__ultoa_invert+0xa2>
 aa0:	62 0f       	add	r22, r18
 aa2:	73 1f       	adc	r23, r19
 aa4:	84 1f       	adc	r24, r20
 aa6:	95 1f       	adc	r25, r21
 aa8:	a0 1d       	adc	r26, r0
 aaa:	08 95       	ret

00000aac <_exit>:
 aac:	f8 94       	cli

00000aae <__stop_program>:
 aae:	ff cf       	rjmp	.-2      	; 0xaae <__stop_program>
